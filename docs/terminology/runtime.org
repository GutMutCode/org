#+title: Runtime

* Definition
The execution time that code is running

The meaning of Runtime is more close to ~Runtime Libary~

The part of program that manages resource allocation, instruction execution, and provides services like memory management or performance tuning during application execution

** Examples
*** Virtual Machine (VM)
Provides uniform runtime environments, like .NET's CLR or Java's JVM, abstracting hardware sepcifics.

*** Language-Specific Runtime
"Ruby Runtime" for Ruby, "JavaScript's runtime environments" like V8, Node.js, etc.

*** Operating Systems Runtime
Features associated with the underlying OS.

*** Run-Time System
Also known as RTS, which are components or software services launched with the application to:
- Manage memory.
- Handle dynamic linking.
- Offer services for exception handling or security.

**** Java runtime environment (VM)
For running Java bytecode

**** Python interpreter
From resource allocation to program elevation


** Runtime Library
A set of code that need to run but not in source code (written by creator of compiler)

A set of code that need to run but does not precompiled to machine code (written by user of compiler)
- usually compiled into bytecode

Some kinds of layer between OS and Source Code

** Isn't Compiled Source Code

** Runtime Library In C
C has very small runtime library

-> It has a lot of responsible to control code
-> It can be dangerous easily
=> OS kill illegal request, doesn't tell you why, and usually dump into ~.dump~ file that's hard to make sense of
=> Sometimes, there are codes that can be dangerous and not illegal, so you need to be careful if you use Compiled binary language

** Runtime Library In Java
[[file:./vm.org][Virtual Machine]] is very common runtime these days (part of runtime)

** Runtime Library In Scripting language
A scripting language ~doesn't precompile anything~ (Javascript, Perl, and PHP)
