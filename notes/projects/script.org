#+title: Script

* 계획
** 프로젝트 목표 (신지환)
Jetson Nano보드에서 신호를 wifi모듈로 신호를 보내고,
신호를 받은 wifi 모듈이 명령신호를 로봇팔을 구성하는 모터에 전달합니다.
모터가 움직여 로봇팔을 조작하고,
OpenCV 프로그램을 사용하여 카메라로 물건을 인식하고 집고 옮기게 됩니다.
로봇팔 구동이 완료된후, 물체 옮긴 성공, 실패 횟수를 Cloud로 보내

** 프로젝트 목적 (김진성)
일상생활에서 특히 음식점이나 카페 같은 곳에서 활용 되기 시작되는 로봇들에 대해서 관심이 있었고 어떻게 움직이는지에 대해 자세히 알아보고 싶었기에 이 프로젝트를 시작하게 되었습니다.
이 프로젝트를 진행함으로써 로봇팔이 움직이는것 뿐만이 아니라 더 나아가 로봇전체를 코드로 관리할수 있는 단계까지 올라가기 위한 첫 한걸음이라고 생각합니다.

** 역할 분담 (김진세)
PPT 참고해 읽기

** 일자별 계획 (김진세)
PPT 참고해 읽기

** 기술스택 (김진호)

** 예상 결과물
jetson나노에서 신호를 WIFI모듈에 전달하고 WIFI모듈에서 전달받은 신호를 서브모터와 카메라에 전달하여 조작하는 방식

** 분야별 계획
조립은 왠만하면 다 같이 할 계획
JETSON NANO와 WIFI모듈을 연결하는 코드는 C++로 작업할 계획
모터 : 파이썬 코드로 WIFI모듈에서 신호를 받으면 6개의 서브모터가 로봇팔을 제어하는 코드를 작성할 계획
집게 :  모터와 마찬가지로 신호를 받으면 물건을 집거나 내려놓는 파이썬코드를 작성할 계획
카메라 : OPENCV에서 사물을 인식하는 기법을 활용하여 코드를 작성할 계획

* ROS 구조
ROS는 특정한 기능을 수행하는 프로세스를 Node 라고 정의해 관리합니다.
모든 Node를 관리하는 최상위 Master가 존재하고,
각 Node마다, 특정한 역할을 줄 수 있습니다.
(역할 설명하기)

Parameter: Node설정에 필요한 각종 데이터를 저장하고 불러올수 있도록 함
Publisher: Topic에 Message 보냄
Subscriber: Topic의 Message 받음
Service Server: 특정 작업을 수행하고, Client에 결과를 제공
Service Client: Server에 특정 작업을 요청하고, 결과를 응답받습니다.

이외에도 Action Server/Client등 여러가지 기능을 부여할 수 있습니다.

* 어려웠던 점
** 하드웨어 호환성
처음 프로젝트를 계획할 당시, 로봇팔의 각각의 모터를 MCU에 연결하고 이를 GPIO, PWM 등을 사용해 조절하려했습니다.

하지만 로봇팔이 정상적으로 동작하기 위해서 모터를 고정할 프레임이 필요했는데,
시중에 판매하는 제품으로 호환되는 제품을 찾을 수 없어 어려웠습니다.

결국, 프레임과 연결되어 있는 OpenManipulator-x 제품을 대여해 사용해야 했는데,
해당 제품은 ROS라는 프로그램을 구동되도록 되어있어, 사전 지식이 없어 배우는 데 많은 시간을 투자해야했습니다.

** 카메라 위치 선정 & 고장
CSI-2를 사용해, 카메라 영상데이터를 Jetson Nano에서 받아오도록 구성했습니다.
하지만 CSI케이블이 짧아, 물체를 올려둘 작업공간을 전부 촬영할 수 없었습니다.

이 것을 CSI 케이블 연장 인터페이스를 사용해 해결하려했으나, 카메라가 망가졌고
최종적으로 분리된 장비인 라즈베리파이에서 이를 따로 촬영하기로 결정하게 되었습니다.

** ROS 구동 환경
ROS 코드 작성시, 사용자에게 키보드입력을 받아, 로봇팔을 움직이는 방식을 사용했는데,
키를 여러번 입력하면 종종 로봇팔이 움직이지 않는 현상이 발생했습니다.
그때마다 프로그램 재실행, 컴퓨터 재부팅을 해주어야 해서
소스코드를 수정,빌드하고 테스트하는 전체 개발 과정에서 많은 시간이 들었습니다.

* 2조 - 스마트 미러
음성인식에 사용된 기술이 뭔가? : Google Assistant

뉴스는 어떻게 가져오나요? API가 있나요?

LED Socket Server/Client 구조 사용

Client - 1초마다 재시도, 현재 밝기 Server로 전송

DHT22 - Socket Programming

DHT22의 역할

CSV -> Google Cloud

OpenCV -> 매직미러

가상의 온도 데이터 -> API를 사용하지 않은 이유가 있나?
서버 주소 ->

프로젝트 진행시 가장 어려웠던 점이 무엇인가?

* 3조 - 스마트 팜
esp32 카메라 모듈

센싱 -> 어떤 정보가 있나?
- 온습도, 조도, 토양수분

App inventor
- UI
